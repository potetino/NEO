	.MCALL	.SETTOP,.PRINT,.EXIT
	.INCLU	/SY:P16MAC/
	.INCLU	/SY:WDC/



START:	.SETTOP	#100000
	BCC	1$
	.PRINT	#NOMEM
	.EXIT

1$:     MOV     #40000, R0
        MOV     #40000/2, R1
2$:     CLR     (R0)+
        SOB     R1, 2$
        CLR     @#177560
        PLCRE   #PL
        MOV     PL+2, AR+10
        ARCRE   #AR
        MOV     AR+2, WN+4
        VWCRE   #WN


BEG:    MOV     #MEN,R0     ;адрес спрайта;
        MOV     ADR,R1      ;адрес ОЗУ, куда будем выводить;
        MOV     (R0)+,R2    ;ширина спрайта в байтах;
        MOV     (R0)+,R3    ;высота спрайта в точечных строках;
A:      MOV     R2,R4       ;начало цикла по строкам;
        MOV     R1,R5       ;запоминаем адрес начала строки;
B:      MOVB    (R0)+,(R1)+ ;цикл вывода одной строки
        SOB     R4,B          ;по байтам;
        MOV     R5,R1       ;восстанавливаем адрес начала строки;
        ADD     #100,R1     ;переходим к следующей строке;
        SOB     R3,A        ;конец цикла по строкам.
;---- временная задержка для замедления движения спрайта ----
        MOV     #4000,R3    ;число 12000 задает длительность задержки
W:      SOB     R3,W
;---- очистка спрайта на экране -----
        MOV     #MEN,R0     ;адрес спрайта;
        MOV     ADR,R1      ;адрес ОЗУ, где будем стирать
        MOV     (R0)+,R2    ;ширина спрайта в байтах;
        MOV     (R0)+,R3    ;высота спрайта в точечных строках;
C:      MOV     R2,R4       ;далее все аналогично выводу спрайта,
        MOV     R1,R5
D:      CLRB    (R1)+         ;только здесь вместо пересылки -
        SOB     R4,D          ;стирание
        MOV     R5,R1
        ADD     #100,R1
        SOB     R3,C
;----------------------------------------------------
        MOV     @#177562,R0 ;код нажатой клавиши в регистр R0
        CMP     R0,#104      ;нажата клавиша "курсор влево"?
        BNE     RIT         ;если нет, идти на метку RIT
        MOV     ADR,R2      ;иначе проверяется, не достигло
        BIC     #177700,R2    ;ли изображение левого края экрана
        BEQ     BEG         ;если достигло, идти на метку BEG
        DEC     ADR         ;иначе уменьшить на 1 адрес изображения
        BR      BEG         ;и идти на метку BEG - переместить изо-
                              ;бражение левее на один байт
;-----------------------------------------------------
RIT:    CMP     R0,#103      ;нажата клавиша "курсор вправо"?
        BNE     UP          ;если нет, идти на метку UP
        MOV     ADR,R2      ;иначе проверяется,
        BIC     #177700,R2  ;достигло ли изображение
        CMP     #74,R2        ;правого края экрана
        BEQ     BEG         ;если достигло, идти на метку BEG
        INC     ADR         ;иначе увеличить адрес изображения на 1
        BR      BEG         ;и идти на метку BEG - переместить изо-
                              ;бражение правее на один байт
;------------------------------------------------------
UP:     CMP     R0,#101      ;нажата клавиша "курсор вверх"?
        BNE     DON         ;если нет, идти на метку DON
        CMP     ADR,#42100  ;изображение достигло верхнего
                              ;края экрана?
        BLO     BEG         ;если достигло, идти на метку BEG
        SUB     #200,ADR    ;иначе адрес изображения уменьшить на 200
        BR      BEG         ;и идти на метку BEG (переместить
                              ;изображение на две строки выше)
;-----------------------------------------------------
DON:    CMP     R0,#102      ;нажата клавиша "курсор вниз"?
        BNE     EX         ;если нет, идти на метку BEG
        CMP     ADR,#75500  ;иначе проверяется достигло ли
                              ;изображение нижнего края экрана
        BHI     BEG         ;если достигло, идти на метку BEG
        ADD     #200,ADR    ;иначе адрес изображения увеличить на 200
        BR      BEG         ;и идти на метку BEG (переместить
                            ;изображение на две строки ниже)
EX:	CMP     R0,#60      ;нажата клавиша "0"?
        BNE     BEG         ;если нет, идти на метку BEG
;-----------------------------------------------------
EXT:	

	VWKILL	#WN ; удалить вид
	ARKILL	#AR ; удалить информацию о плоскоти из оконной системы
	PLFRE	#PL ; освободить палитру
	.EXIT




ADR:   .WORD    56036       ;текущий адрес начала изображения
;---- таблица изображения (спрайта) ----
MEN:   .WORD 2
       .WORD 17
       .WORD 1240
       .WORD 1730
       .WORD 520
       .WORD 120
       .WORD 1634
       .WORD 7777
       .WORD 31663
       .WORD 52524
       .WORD 21762
       .WORD 720
       .WORD 2424
       .WORD 2024
       .WORD 24012
       .WORD 26013
       .WORD 124052

PL:     .WORD   17      ; CODE команда "создать палитру"
        .WORD   VM2     ; MDPL VM1 - 1 бит/точку 2 цвета, VM2 - 2 бита/точку 4 цвета
                        ; VM40,VM41 - 4 бита на точку 16 цветов, VM8 - 8 бит/точку 256 цветов

        ; слова палитры G5 G4 G3 R4 R3 R2 B4 B3 - G2 G1 G0 R1 R0 B2 B1 B0      
        .BYTE   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0      ; 12. неиспользуемые байты (кроме #0 - граница)
        .BYTE   0, 3, 340, 34                           ; верхние байты слов палитры
        .BYTE   0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0      ; 12. неиспользуемые байты (кроме #0)
        .BYTE   0, 7, 340, 30                           ; нижние байты слов палитры

AR:     .WORD   46      ; CODE команда "создать область"
        .WORD   40000   ; ARNUM адрес оконного буфера
        .WORD   256.    ; LINS ; колличество строк в текущей плоскости
        .WORD   256./4  ; SLEN ; длинна видеостроки в байтах
        .BLKW   1       ; MDPL

WN:     .WORD   4       ; CODE команда "создать вид"
        .WORD   0       ; WNUM
        .BLKW   1       ; ANUM
        .WORD   0       ; ARY номер первой строки на плоскости
        .WORD   0       ; ARX смещение от начала строки в байтах
        .WORD   20.     ; SY1 номер вервой строки вида на экране
        .WORD   275.    ; SY2 номер последней стоки вида на экране
        .WORD   5.      ; SX1 номер первой плоскости вида на экране
        .WORD   20.     ; SX2 номер последней плоскости вида на экране
        .BYTE   1, 2    ; DEN младший байт - плоскость по горизонтали (0,1,2)
                        ; старшмй байт - плоскость по вертикали (0,1,2)
                        ; 0 -  соответствует минимальной плотности, т.е. максимальной растяжке

NOMEM:  .ASCIZ  /?NEO-F-Not enough memory/
        .EVEN

	.end	Start
